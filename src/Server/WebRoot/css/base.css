@layer 
open-props,
layout,
text,
appearance,
other,
animation;

@import "open-props.css?v=202311160805" layer(open-props);

@layer layout {

  body {
    display: flex;
    height: 100vh;
  }
  .hidden{
    display:none;
  }
  html:has(dialog[open]) {
    overflow: hidden;
  }

  form:has(.setting) {
    margin: auto;
    width: calc(100% - 3em);
    max-width: 20em;
  }
  .setting {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75em 1em;
  }
 
  .setting__label {
    margin-right: 1em;
  }

  .switch {
    flex-shrink: 0;
    position: relative;
    width: 5em;
    height: 2em;
    &,
    &:before,
    &:after {
      display: block;
    }
    &:before,
    &:after {
      content: "";
      position: absolute;
      top: 0.25em;
      left: 0.25em;
      width: 4.5em;
      height: 1.5em;
    }
    &::after {
      z-index: 1;
    }
  }
 
  .switch__fill {
    overflow: hidden;
    position: absolute;
    top: 0.25em;
    right: 0;
    left: 0.25em;
    width: 4.5em;
    height: 1.5em;
    z-index: 1;
  }
  .switch__input {
    position: relative;
    width: 100%;
    height: 100%;
    z-index: 2;
    &:before,
    &:after {
      border-radius: 50%;
      content: "";
      display: block;
      position: absolute;
    }
    &:before {
      top: 0.125em;
      left: 0.125em;
      width: 1.75em;
      height: 1.75em;
    }
    &:after {
      top: 0.25em;
      left: 0.25em;
      width: 1.5em;
      height: 1.5em;
    }
    &:checked:before,
    &:checked:after {
      transform: translateX(3em);
    }
    &:checked + .switch__fill .switch__text {
      transform: translateX(0);
    }
    &:checked + .switch__fill .switch__text + .switch__text {
      transform: translateX(4em);
    }
  }
  
  .switch__text {
    display: block;
    font-size: 0.75em;
    font-weight: 700;
    line-height: 2;
    padding: 0 0.75em;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transform: translateX(-4.25em);
    z-index: -1;
    & + & {
      text-align: right;
      transform: translateX(0);
    }
  }

  dialog {
    max-inline-size: min(90vw, var(--size-content-3));
    margin: auto;
    padding: 0;
    inset: 0;
    z-index: var(--layer-important);
    overflow: hidden;
    &[hidden] {
      visibility: hidden;
    }
    > form {
      display: grid;
      grid-template-rows: auto 1fr auto;
      align-items: start;
      max-block-size: 80vh;
      max-block-size: 80dvb;
      > article {
        overflow-y: scroll; 
        max-block-size: 100%; /* safari */
        overscroll-behavior-y: contain;
        display: grid;
        gap: var(--size-3);
        z-index: var(--layer-1);
        padding-inline: var(--size-5);
        padding-block: var(--size-3) var(--size-5);
      }
      > header {
        display: flex;
        gap: var(--size-3);
        justify-content: space-between;
        align-items: flex-start;
        padding-block: var(--size-3);
        padding-inline: var(--size-5);
        > button {
          padding: .75ch;
          aspect-ratio: 1;
          flex-shrink: 0;
          place-items: center;
        }
      }
      > footer {
        display: flex;
        justify-content: flex-end;
        padding-inline: var(--size-5);
        padding-block: var(--size-3);
        > menu {
          display: flex;
          flex-wrap: wrap;
          gap: var(--size-3);
        }
      }
    }
    @media (max-width: 500px) {
      & {
        margin-block-end: 0;
      }
    }
  }
}

@layer appearance {

:root {
  --hue: 223;
  --hue-success: 103;
  --bg: hsl(var(--hue),10%,80%);
  --fg: hsl(var(--hue),10%,10%);
  --primary: hsl(var(--hue),90%,50%);
  --primary-t: hsla(var(--hue),90%,50%,0);
  --trans-dur: 0.3s;
  --trans-timing: cubic-bezier(0.65,0,0.35,1);
  font-size: clamp(1rem,  0.333vb, 1.5rem);
}
body, 
input {
  font: 1em/1.5 "DM Sans", sans-serif;
}
body {
  background-color: var(--bg);
  color: var(--fg);
}

form:has(.setting) {
  background-color: hsl(var(--hue),10%,90%);
  border-radius: 0.25em;
  box-shadow: 0 0.25em 0.25em hsla(var(--hue),10%,10%,0.4);
}
.setting {
  box-shadow:
    0 0.125em 0 hsl(var(--hue),10%,100%) inset,
    0 -0.125em 0 hsl(var(--hue),10%,75%) inset;
  &:only-child {
    border-radius: 0.25em;
  }
  &:first-child {
    border-radius: 0.25em 0.25em 0 0;
  }
  &:last-child {
    border-radius: 0 0 0.25em 0.25em;
  }
}

.setting,
.switch__input {
  -webkit-tap-highlight-color: transparent;
}

.switch {
  background-image: linear-gradient(hsl(var(--hue),10%,60%),hsl(var(--hue),10%,95%));
  box-shadow: 0 0 0.125em 0.125em hsl(var(--hue),10%,90%) inset;
  border-radius: 1em;
  &:before,
  &:after {
    border-radius: 0.75em;
  }
  &::before {
    background-color: hsl(var(--hue),10%,60%);
  }
  &::after {
    box-shadow: 0 0 0.5em hsl(var(--hue),10%,20%) inset;
  }
}

.switch__fill {
  border-radius: 0.75em;
}
.switch__input {
  background-color: revert;
  border-radius: 1em;
  box-shadow: 0 0 0 0.125em var(--primary-t);
  cursor: pointer;
  outline: transparent;
  transition: box-shadow calc(var(--trans-dur) / 2) var(--trans-timing);
  -webkit-appearance: none;
  appearance: none;
  &:focus-visible {
    box-shadow: 0 0 0 0.125em var(--primary);
  }
  &:before,
  &:after {
    transition: transform var(--trans-dur) var(--trans-timing);
  }
  &:before {
    background-image: linear-gradient(hsl(0,0%,100%),hsl(var(--hue),10%,60%));
    box-shadow:
      0 0 0.125em 0.0625em hsl(var(--hue),10%,40%),
      0 0.25em 0.25em hsla(var(--hue),10%,10%,0.4);
  }
  &:after {
    background-image: linear-gradient(hsl(var(--hue),10%,90%),hsl(var(--hue),10%,80%));
  }
  &:checked:before,
  &:checked:after {
    transform: translateX(3em);
  }
  &:checked + .switch__fill .switch__text {
    transform: translateX(0);
  }
  &:checked + .switch__fill .switch__text + .switch__text {
    transform: translateX(4em);
  }
}

.switch__text {
  background-color: hsl(var(--hue-success),90%,50%,0.5);
  color: hsl(var(--hue-success),90%,10%);
  font-size: 0.75em;
  font-weight: 700;
  opacity: 0.6;
  text-shadow: 0 0.0625rem 0 hsl(var(--hue-success),90%,55%);
  transition: transform var(--trans-dur) var(--trans-timing);
  & + & {
    background-color: hsla(0,0%,0%,0);
    color: hsl(var(--hue),10%,10%);
    text-shadow: 0 0.0625rem 0 hsl(var(--hue),10%,75%);
    text-align: right;
  }
}

/* Dark theme */
@media (prefers-color-scheme: dark) {
	:root {
		--bg: hsl(var(--hue),10%,20%);
		--fg: hsl(var(--hue),10%,90%);
		--primary: hsl(var(--hue),90%,70%);
		--primary-t: hsla(var(--hue),90%,70%,0);
	}
	form {
		background-color: hsl(var(--hue),10%,30%);
	}
	.setting {
		box-shadow:
			0 0.125em 0 hsl(var(--hue),10%,40%) inset,
			0 -0.125em 0 hsl(var(--hue),10%,20%) inset;
	}
	.switch {
		background-image: linear-gradient(hsl(var(--hue),10%,15%),hsl(var(--hue),10%,35%));
		box-shadow: 0 0 0.125em 0.125em hsl(var(--hue),10%,30%) inset;
    &:before {
      background-color: hsl(var(--hue),10%,40%);
    }
    &:after {
      box-shadow: 0 0 0.5em hsl(0,0%,0%) inset;
    }
	}
	
	.switch__input:before {
		background-image: linear-gradient(hsl(var(--hue),10%,50%),hsl(var(--hue),10%,20%));
		box-shadow:
			0 0 0.125em 0.0625em hsl(var(--hue),10%,10%),
			0 0.25em 0.25em hsla(var(--hue),10%,10%,0.4);
	}
	.switch__input:after {
		background-image: linear-gradient(hsl(var(--hue),10%,40%),hsl(var(--hue),10%,30%));
	}
	.switch__text {
		text-shadow: 0 0.0625rem 0 hsl(var(--hue-success),90%,45%);
	}
	.switch__text + .switch__text {
		color: hsl(var(--hue),10%,10%);
		text-shadow: 0 0.0625rem 0 hsl(var(--hue),10%,55%);
	}
}
 

  dialog {
    background: var(--surface-1);
    color: inherit; /* safari */
    border-radius: var(--radius-3);
    box-shadow: var(--shadow-6);
    pointer-events: none;
    &[open] {
        pointer-events: auto;
        &::backdrop {
            backdrop-filter: blur(5px);
            -webkit-backdrop-filter: blur(5px);
          }
      }
    > form {
      > article {
        box-shadow: var(--shadow-2);
      }
      > header {
        background: var(--surface-2);
        > button {
          border-radius: var(--radius-round);
          stroke: currentColor;
          stroke-width: 3px;
        }
      }
      > footer {
        background: var(--surface-2);
      }
    }
    @media (max-width: 500px) {
      & {
        border-end-end-radius: 0;
        border-end-start-radius: 0;
      }
    }
  }

  @media (prefers-color-scheme: dark) {

    dialog {
      background: var(--surface-2);
      & > form > :is(header,footer) {
        background: var(--surface-1);
      }
      &, & > form > article {
        border-block-start: var(--border-size-1) solid var(--surface-3);
      }
    }
  }
}

@layer animation {
  .gui-switch {
      --thumb-transition-duration: 0.25s;
      transition: background-color 0.25s ease;
      & > input {
        transition: background-color 0.25s ease;
      }
  }
  dialog {
    animation:
      var(--animation-scale-down) forwards,
      var(--animation-fade-out) forwards;
    animation-timing-function:
      var(--ease-squish-3),
      var(--ease-3);
      &[open] {
        animation:
          var(--animation-slide-in-up) forwards,
          var(--animation-fade-in) forwards;
      }
    &::backdrop {
      transition: backdrop-filter .5s ease;
    }
   
    @media (max-width: 500px) {
      & {
        animation: var(--animation-slide-out-down) forwards;
        animation-timing-function: var(--ease-squish-2);
      }
    }
  }

  @media (prefers-reduced-motion: no-preference) {
    .gui-switch > input::before {
      transition: transform var(--thumb-transition-duration) ease, box-shadow 0.25s ease;
    }
  }
}