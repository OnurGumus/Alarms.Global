@layer 
open-props,
layout,
text,
appearance,
other,
animation;

@import "open-props.css?v=202311160805" layer(open-props);

@layer layout {
  .gui-switch {
    --thumb-size: 2rem;
    --track-size: calc(var(--thumb-size) * 2);
    --track-padding: 2px;
    --isLTR: 1;
    display: flex;
    align-items: center;
    gap: 2ch;
    justify-content: space-between;
    & > input {
      --thumb-position: 0%;
      margin:revert;
      padding: var(--track-padding);
      inline-size: var(--track-size);
      block-size: var(--thumb-size);
      border-radius: var(--track-size);
      touch-action: pan-y;
      border: none;
      outline-offset: 5px;
      box-sizing: content-box;
      flex-shrink: 0;
      display: grid;
      align-items: center;
      grid: [track] 1fr / [track] 1fr;
      &::before {
        --highlight-size: 0;
        content: "";
        cursor: pointer;
        pointer-events: auto;
        grid-area: track;
        inline-size: var(--thumb-size);
        block-size: var(--thumb-size);
        transform: translateX(var(--thumb-position));
      }
      &:not(:disabled):hover::before {
        --highlight-size: 0.5rem;
      }
      &:checked {
        --thumb-position: calc((var(--track-size) - 100%) * var(--isLTR));
      }
      &:indeterminate {
        --thumb-position: calc(
          calc(calc(var(--track-size) / 2) - calc(var(--thumb-size) / 2)) * var(--isLTR));
      }
    }
    &:dir(rtl) {
      --isLTR: -1;
    }
    &.-vertical {
      min-block-size: calc(var(--track-size) + calc(var(--track-padding) * 2));
    }
    &.-vertical > input {
      transform: rotate(calc(90deg * var(--isLTR) * -1));
      touch-action: pan-x;
    }
  }
}

@layer appearance {
  .gui-switch {
    --thumb: hsl(0, 0%, 100%);
    --thumb-highlight: hsla(0, 0%, 0%, 0.25);
    --track-inactive: hsl(80, 0%, 80%);
    --track-active: hsl(80, 60%, 45%);
    --thumb-color: var(--thumb);
    --thumb-color-highlight: var(--thumb-highlight);
    --track-color-inactive: var(--track-inactive);
    --track-color-active: var(--track-active);
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    -webkit-tap-highlight-color: transparent;
    > input {
      background: var(--track-color-inactive);
      -webkit-appearance: none;
      -moz-appearance: none;
      appearance: none;
      pointer-events: none;
      touch-action: pan-y;
      &::before {
        background: var(--thumb-color);
        box-shadow: 0 0 0 var(--highlight-size) var(--thumb-color-highlight);
        border-radius: 50%;
      }
      &:checked {
        background: var(--track-color-active);
      }
      &:disabled {
        cursor: not-allowed;
        --thumb-color: transparent;
      }
      &:disabled::before {
        cursor: not-allowed;
        box-shadow: inset 0 0 0 2px hsla(0, 0%, 100%, 0.5);
      }
    }
  }

  @media (prefers-color-scheme: dark) {
    .gui-switch {
      --thumb: hsl(0, 0%, 5%);
      --thumb-highlight: hsla(0, 0%, 100%, 0.25);
      --track-inactive: hsl(80, 0%, 35%);
      --track-active: hsl(80, 60%, 60%);
      & > input:disabled::before {
        box-shadow: inset 0 0 0 2px hsla(0, 0%, 0%, 0.5);
      }
  }
}

@layer animation {
  .gui-switch {
      --thumb-transition-duration: 0.25s;
      transition: background-color 0.25s ease;
      & > input {
        transition: background-color 0.25s ease;
      }
  }

  @media (prefers-reduced-motion: no-preference) {
    .gui-switch > input::before {
      transition: transform var(--thumb-transition-duration) ease, box-shadow 0.25s ease;
    }
  }
}